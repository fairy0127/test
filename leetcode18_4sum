class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        Set<Integer> sum = new HashSet<Integer>();
        List<List<Integer>> res = new ArrayList<>();
        Set<List<Integer>> tSum = new HashSet<List<Integer>>();
        Arrays.sort(nums);

        for(int i=0; i+3<nums.length; i++)
        {
            if(i>0&& nums[i]==nums[i-1])
                continue;
            for(int a=i+1; a+2<nums.length; a++)
            {
               // if(a>0&&nums[a] == nums[a-1])
               //     continue;
                List<Integer> temp = new ArrayList<>();
                temp.add(nums[i]);
                temp.add(nums[a]);
                if(sum.contains(nums[i]+nums[a])&&tSum.contains(temp))
                {
                    continue;
                }
                else
                {
                    sum.add(nums[i] + nums[a]);
                    tSum.add(temp);
                }

                int j = a + 1, k = nums.length - 1;
                int target4 = target-(nums[i]+nums[a]);
                while (j < k) {
                    if (nums[j] + nums[k] == target4) {
                        res.add(Arrays.asList(nums[i],nums[a], nums[j], nums[k]));
                        j++;
                        k--;
                        while (j < k && nums[j] == nums[j - 1]) j++;  // skip same result
                        while (j < k && nums[k] == nums[k + 1]) k--;  // skip same result
                    } else if (nums[j] + nums[k] > target4) {
                        k--;
                    } else {
                        j++;
                    }
                }
            }
        }
        return res;

    }
}
