/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists.length ==0)
            return null;
        ListNode ret = new ListNode(0);
        int cnt = 0;
        List<Integer> intArray = new ArrayList<>();

        for(int i=0; i< lists.length; i++)
        {
            ListNode temp = lists[i];
            while(temp != null)
            {
                intArray.add(temp.val);
                temp = temp.next;
            }
        }
        if(intArray.size() == 0)
            return null;

        int[] listNum = new int[intArray.size()];
        for(int i=0; i< intArray.size(); i++)
        {
            listNum[i] = intArray.get(i);
        }
        Arrays.sort(listNum);
        ListNode temp = ret;
        for(int i=0; i<listNum.length; i++)
        {
            temp.val = listNum[i];
            if(i!=listNum.length-1)
            {
                temp.next = new ListNode(0);
                temp = temp.next;
            }

        }

        return ret;

    }
}
