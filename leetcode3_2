class Solution {
    public int lengthOfLongestSubstring(String s) {
       // List<String> arrayList = new ArrayList();
        int leng = s.length();
        if(leng == 1)
            return 1;
        int longestSize = 0;
        for(int i=0; i<leng; i++)
        {

            for(int j=i+1; j<leng; j++)
            {

                String subStr = s.substring(i,j);
                String compareStr = s.substring(j,j+1);
                if(subStr.contains(compareStr))
                {
                   // arrayList.add(subStr);
                    longestSize = Math.max(longestSize, j-i);
                    break;
                }
                if(j == leng-1)
                {
                    //arrayList.add(s.substring(i,j+1));
                    longestSize = Math.max(longestSize, j+1-i);
                }
                    
                    

            }
        }
        /*
        int longestSize = 0;
        String longestStr = "";
        if(arrayList.size() > 0)
        {
            longestSize = arrayList.get(0).length();
            longestStr = arrayList.get(0);
            for(int i=1; i<arrayList.size(); i++)
            {
                int comparelength = arrayList.get(i).length();
                if(comparelength > longestSize)
                {
                    longestSize = comparelength;
                    //longestStr = arrayList.get(i);
                }
            }
            
        }*/
       /* if(s.length() == 1)
            longestSize = 1;
        else if(arrayList.size() == 0)
            longestSize = s.length(); */
        return longestSize;
        
        
        
    }
}
