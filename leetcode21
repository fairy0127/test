/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1==null&&l2==null)
            return null;
        ListNode tL1 = l1;
        ListNode tL2 = l2;
        ListNode ret = new ListNode(0);
        ListNode temp = ret;
        while(tL1 != null)
        {
          if(tL2 != null)
          {
              if(tL1.val<=tL2.val)
              {
                  temp.val = tL1.val;
                  tL1 = tL1.next;
              }
              else
              {
                  temp.val = tL2.val;
                  tL2 = tL2.next;
              }

          }
          else
         {
            temp.val = tL1.val;
            tL1 = tL1.next;
         }
            if(tL1 !=null || tL2 != null)
            {
                        temp.next = new ListNode(0);
        temp = temp.next;
            }


        }

        while(tL1 == null && tL2!=null)
        {
            temp.val = tL2.val;
            tL2 = tL2.next;
                       if(tL2 != null)
            {
                        temp.next = new ListNode(0);
        temp = temp.next;
            }
        }
        temp.next = null;
        return ret;

    }
}
