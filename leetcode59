class Solution {
    public int[][] generateMatrix(int n) {
        int[][] ret = new int[n][n];

        int row = n;
        int col = n;
        int times = row*col;
        int horizon = 1;
        int vertical = 0;
        int index1 = 0;
        int index2 = -1;
        int direction = 1;//1-> 2|_ 3<- 4-|
        int colmax =  col-1;
        int rowmax = row-1;
        int colmin = 0;
        int rowmin = 1;
        for(int i=0; i< times; i++)
        {
            index1 = index1 + vertical;
            index2 = index2 + horizon;
            ret[index1][index2]=i+1;
            switch(direction)
            {
                case 1:
                if(index2 == colmax)
                {
                    vertical = 1;
                    horizon = 0;
                    colmax = colmax-1;
                    direction = 2;
                }
                break;
                case 2:
                if(index1 == rowmax)
                {
                    vertical = 0;
                    horizon = -1;
                    rowmax = rowmax -1;
                    direction = 3;
                }
                break;
                case 3:
                if(index2 == colmin)
                {
                    vertical = -1;
                    horizon = 0;
                    colmin = colmin + 1;
                    direction = 4;
                }
                break;
                case 4:
                if(index1 == rowmin)
                {
                    vertical = 0;
                    horizon = 1;
                    rowmin = rowmin+1;
                    direction = 1;
                }
                break;
            }

        }
        return ret;

    }
}
