class Solution {
    public List<List<Integer>> permute(int[] nums) {

        List<List<Integer>> ret = new ArrayList<List<Integer>>();
        if(nums.length == 0)
            return ret;
        int[] items = nums;
        Arrays.sort(items);
        List<Integer> tem = new ArrayList<Integer>();
        for(int i=0; i< nums.length; i++)
        {
            tem.add(items[i]);
        }
        ret.add(tem);
        List<Integer> item = getNextPermutations(items);
        while(item.size()!=0)
        {
            List<Integer> temp = new ArrayList<Integer>();

            int[] numItem = new int[item.size()];
            for(int i=0; i<item.size();i++)
            {
                numItem[i] = item.get(i);
                temp.add(item.get(i));
            }
            ret.add(temp);
            item.clear();
            item = getNextPermutations(numItem);
        }
        return ret;

    }
    public List<Integer> getNextPermutations(int[] orgins)
    {
        List<Integer> ret = new ArrayList<Integer>();
        int[] nums = orgins;
        int numsi =-1;
        int numsii = -1;
        int numsj = -1;
        for(int i=nums.length-1; i>0; i--)
        {
            if(nums[i-1]<nums[i])
            {
                numsi = i-1;
                numsii = i;
                break;


            }
        }
        if(numsi == -1)
        {
            return ret;

        }
        else
        {
            for(int j=nums.length-1; j>numsi; j--)
            {
                if(nums[j]>nums[numsi])
                {
                    numsj = j;
                    break;

                }
            }
            int tempi = nums[numsi];
            int tempj = nums[numsj];
            nums[numsi] = tempj;
            nums[numsj] = tempi;
            int[] temps = new int[nums.length-numsii];
            for(int i = 0; i< nums.length-numsii; i++)
            {
                temps[i] = nums[i+numsii];
            }
            for(int i=numsii; i< nums.length; i++)
            {
               // System.out.println("nums:"+nums[i]);
                nums[i] = temps[nums.length-1-i];

                //System.out.println("temps:"+temps[i-numsii]);
            }

            for(int i=0; i< nums.length; i++)
            {
                ret.add(nums[i]);
               // System.out.println("nums:" + nums[i]);
            }
            for(int i=0; i< ret.size(); i++)
            {
               // System.out.println("ret:"+ret.get(i));
            }
            return ret;


        }
    }
}
