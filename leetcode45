class Solution {

    public int jump(int[] nums) {
        if(nums.length == 0)
        {
            return 0;
        }
        if(nums.length!=0 && nums[0]==0)
            return 0;
        if(nums.length == 1)
            return 0;
       int ret = 0;
        int i=0;
        while(i<nums.length)
        {
            int start = i;
            int end = i+nums[i];
            if(start>=nums.length-1 )
            {
                ret = ret + 1;
                break;
            }
            if(end >=nums.length-1)
            {
                ret = ret + 1;
                break;
            }

            int max = getMax(nums, start, end);

            ret = ret + 1;

            if(max+nums[max]>=nums.length-1)
            {
                ret = ret + 1;
                return ret;
            }
            i= max;


        }
        return ret;
    }
    public int getMax(int[] nums, int start, int end)
    {
        int ret = start;
        int max = nums[start]+start;
        for(int i= start; i<=end; i++)
        {
            if(nums[i]+i>=max)
            {
                max = nums[i]+i;
                ret = i;
            }
        }
        return ret;
    }
}
